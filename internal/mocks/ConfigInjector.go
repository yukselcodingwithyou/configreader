// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// ConfigInjector is an autogenerated mock type for the ConfigInjector type
type ConfigInjector struct {
	mock.Mock
}

// InjectFrom provides a mock function with given fields: path
func (_m *ConfigInjector) InjectFrom(path string) ([]byte, error) {
	ret := _m.Called(path)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string) []byte); ok {
		r0 = rf(path)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(path)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewConfigInjector interface {
	mock.TestingT
	Cleanup(func())
}

// NewConfigInjector creates a new instance of ConfigInjector. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewConfigInjector(t mockConstructorTestingTNewConfigInjector) *ConfigInjector {
	mock := &ConfigInjector{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
